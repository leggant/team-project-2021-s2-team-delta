name: Laravel Dusk Testing
on:
  pull_request:
    branches: [staging, master, main, development]

jobs:
  Laravel-Set-Up:
    name: Laravel (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest    
    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: dusktest
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        # php-versions: ['7.4', '8.0']
        php-versions: ['8.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, mysql, redis
          coverage: xdebug
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
      - name: Install Composer dependencies
        run: |
            composer install --no-progress --prefer-dist --optimize-autoloader
            chmod -R 777 storage bootstrap/cache
            npm install
            npm run dev
      - name: Prepare the application
        run: |
          chmod -R 777 storage bootstrap/cache
          php -r "file_exists('.env') || copy('.env.dusk.local', '.env');"
          php artisan key:generate
      - name: Clear Config
        run: php artisan config:clear
      - name: Run Migration
        run: php artisan migrate
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
      - name: Run Seeder
        run: php artisan db:seed
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
      - name: Upgrade Chrome Driver
        run: |
          php artisan dusk:chrome-driver --detect `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`
          chmod -R 0755 vendor/laravel/dusk/bin/
      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
      - name: Start PHP Artisan Server
        env: 
          DB_DATABASE: dusktest
          DB_USERNAME: root
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
        run: php artisan serve > /dev/null 2>&1 &
      - name: Run Dusk Tests
        run: |
          php artisan config:cache
          php artisan dusk
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
          DB_DATABASE: dusktest
          DB_USERNAME: root      
      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots
      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: console
          path: tests/Browser/console
